atp.service.public=true
server.shutdown=graceful
server.forward-headers-strategy=NATIVE
##==================spring===
spring.main.allow-bean-definition-overriding=true
##==================multipart-sizes==========================
#disables files and requests sizes limitations
spring.servlet.multipart.max-file-size=15MB
atp.itf.lite.max-size-file=10485760
##==================atp-itf-lite-http-client-configuration===
atp.itf.lite.connection-timeout=${ATP_ITF_LITE_CONNECTION_TIMEOUT:30000}
atp.itf.lite.request-timeout=${ATP_ITF_LITE_REQUEST_TIMEOUT:30000}
atp.itf.lite.socket-timeout=${ATP_ITF_LITE_SOCKET_TIMEOUT:60000}
atp.itf.lite.sse-timeout=${ATP_ITF_LITE_SSE_TIMEOUT:60000}
atp.itf.lite.sse-ping-timeout=${ATP_ITF_LITE_PING_SSE_TIMEOUT:30000}
atp.itf.lite.max-total-connections=${ATP_ITF_LITE_MAX_TOTAL_CONNECTIONS:100}
atp.itf.lite.default-keep-alive-time-millis=${ATP_ITF_LITE_DEFAULT_KEEP_ALIVE_TIME_MILLIS:20000}
atp.itf.lite.close-idle-connection-wait-time-secs=${ATP_ITF_LITE_CLOSE_IDLE_CONNECTION_WAIT_TIME:30}
atp.itf.lite.http.request-size-limit-in-mb=${ATP_ITF_LITE_HTTP_REQUEST_SIZE_MB:100}
atp.itf.lite.http.response-size-limit-in-mb=${ATP_ITF_LITE_HTTP_RESPONSE_SIZE_MB:100}
##==================atp-auth-spring-boot-starter=====================
spring.cache.cache-names=projects,auth_objects
spring.cache.caffeine.spec=maximumSize=100, expireAfterAccess=120s
spring.profiles.active=${SPRING_PROFILES:default}
atp-auth.project_info_endpoint=${PROJECT_INFO_ENDPOINT:/api/v1/users/projects}
atp-auth.headers.content-security-policy=${CONTENT_SECURITY_POLICY:default-src 'self' *}
atp.ei.file.cleanup.job.enable=${EI_CLEAN_JOB_ENABLED:true}
atp.export.workdir=${EI_CLEAN_JOB_WORKDIR:exportimport/node}
atp.ei.file.delete.after.ms=${EI_CLEAN_JOB_FILE_DELETE_AFTER_MS:172800000}
atp.ei.file.cleanup.job.fixedRate=${EI_CLEAN_SCHEDULED_JOB_PERIOD_MS:86400000}
## ================== Feign ========================
atp.service.internal=${ATP_INTERNAL_GATEWAY_ENABLED:true}
feign.atp.ram.url=${FEIGN_ATP_RAM_URL:}
feign.atp.ram.name=${FEIGN_ATP_RAM_NAME:ATP-RAM}
feign.atp.ram.route=${FEIGN_ATP_RAM_ROUTE:api/atp-ram/v1}
feign.httpclient.enabled=${FEIGN_HTTPCLIENT_ENABLED:false}
feign.okhttp.enabled=${FEIGN_OKHTTP_ENABLED:true}
##========================Feign timeout================================
feign.client.config.default.connectTimeout=${FEIGN_CONNECT_TIMEOUT:480000}
feign.client.config.default.readTimeout=${FEIGN_READ_TIMEOUT:480000}
## catalogue
atp.catalogue.frontend.url=${ATP_CATALOGUE_URL:}
feign.atp.catalogue.url=${FEIGN_ATP_CATALOGUE_URL:}
feign.atp.catalogue.name=${FEIGN_ATP_CATALOGUE_NAME:ATP-CATALOGUE}
feign.atp.catalogue.route=${FEIGN_ATP_CATALOGUE_ROUTE:api/atp-catalogue/v1}
## js script engine
feign.atp.itf.lite.script.engine.url=${FEIGN_ATP_ITF_LITE_SCRIPT_ENGINE_URL:http://atp-itf-lite-script-engine:8080}
feign.atp.itf.lite.script.engine.name=${FEIGN_ATP_ITF_LITE_SCRIPT_ENGINE_NAME:ATP-ITF-LITE-SCRIPT-ENGINE}
feign.atp.itf.lite.script.engine.route=${FEIGN_ATP_ITF_LITE_SCRIPT_ENGINE_ROUTE:}
## itf
feign.atp.itf.enabled=${FEIGN_ATP_ITF_ENABLED:true}
feign.atp.itf.url=${FEIGN_ATP_ITF_URL:}
feign.atp.itf.name=${FEIGN_ATP_ITF_NAME:ATP-ITF-EXECUTOR}
feign.atp.itf.route=${FEIGN_ATP_ITF_ROUTE:api/atp-itf-executor/v1}
## atp-users
feign.atp.users.url=${FEIGN_ATP_USERS_URL:}
feign.atp.users.name=${FEIGN_ATP_USERS_NAME:ATP-USERS-BACKEND}
feign.atp.users.route=${FEIGN_ATP_USERS_ROUTE:api/atp-users-backend/v1}
## environments
feign.atp.environments.url=${FEIGN_ATP_ENVIRONMENTS_URL:}
feign.atp.environments.name=${FEIGN_ATP_ENVIRONMENTS_NAME:ATP-ENVIRONMENTS}
feign.atp.environments.route=${FEIGN_ATP_ENVIRONMENTS_ROUTE:api/atp-environments/v1}
## export-import
feign.atp.ei.url=${FEIGN_ATP_EI_URL:}
feign.atp.ei.name=${FEIGN_ATP_EI_NAME:ATP-EXPORT-IMPORT}
feign.atp.ei.route=${FEIGN_ATP_EI_ROUTE:api/atp-export-import/v1}
## macros
feign.atp.macros.url=${FEIGN_ATP_MACROS_URL:}
feign.atp.macros.name=${FEIGN_ATP_MACROS_NAME:ATP-MACROS}
feign.atp.macros.route=${FEIGN_ATP_MACROS_ROUTE:api/atp-macros/v1}
##==================Integration with Spring Cloud======================
spring.application.name=${SERVICE_NAME:atp-itf-lite-backend}
eureka.client.serviceUrl.defaultZone=${SERVICE_REGISTRY_URL:http://atp-registry-service:8761/eureka}
eureka.client.enabled=${EUREKA_CLIENT_ENABLED:true}
eureka.instance.preferIpAddress=true
##==================Keycloak=====================
keycloak.enabled=${KEYCLOAK_ENABLED:false}
keycloak.public-client=true
keycloak.ssl-required=external
keycloak.bearer-only=true
keycloak.cors=true
keycloak.auth-server-url=${KEYCLOAK_AUTH_URL}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.resource=${KEYCLOAK_CLIENT_NAME}
keycloak.credentials.secret=${KEYCLOAK_SECRET}
##==================Postgres=====================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${PG_DB_ADDR}:${PG_DB_PORT}/${ATP_ITF_LITE_DB}
spring.datasource.username=${ATP_ITF_LITE_DB_USER}
spring.datasource.password=${ATP_ITF_LITE_DB_PASSWORD}
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=40
spring.datasource.hikari.auto-commit=true
##==================Zipkin=====================
spring.sleuth.enabled=${ZIPKIN_ENABLE:false}
spring.sleuth.sampler.probability=${ZIPKIN_PROBABILITY:1.0}
spring.zipkin.baseUrl=${ZIPKIN_URL:http://localhost:9411}
##==================atp-common-logging=====================
atp.logging.enabled=${ATP_HTTP_LOGGING:true}
atp.logging.resttemplate.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.resttemplate.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE:false}
atp.logging.feignclient.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.feignclient.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE:false}
atp.logging.controller.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.controller.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE:false}
atp.logging.controller.uri.ignore=${ATP_HTTP_LOGGING_URI_IGNORE:/atp-itf-lite/api/v1/sse/.* /rest/deployment/readiness /rest/deployment/liveness}
atp.logging.business.keys=userId,projectId,executionRequestId,testRunId,bvTestRunId,bvTestCaseId,environmentId,systemId,subscriberId,tsgSessionId,svpSessionId,dataSetId,dataSetListId,attributeId,itfLiteRequestId,reportType,itfSessionId,itfContextId,callChainId,sseId

##==================Logging=====================
logging.level.root=${LOG_LEVEL:INFO}
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace

##==================Liquibase=====================
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db.changelog/changelog-main.xml
service.entities.migration.enabled=${SERVICE_ENTITIES_MIGRATION_ENABLED:false}

##=============Lock Manager========================
atp.lock.default.duration.sec=${LOCK_DEFAULT_DURATION_SEC:60}
atp.lock.retry.timeout.sec=${LOCK_RETRY_TIMEOUT_SEC:10800}
atp.lock.retry.pace.sec=${LOCK_RETRY_PACE_SEC:3}

##==================Mongo settings======================
max.connection.idle.time=${MAX_CONNECTION_IDLE_TIME:0}
min.connections.per.host=${MIN_CONNECTIONS_PER_HOST:40}
connections.per.host=${CONNECTIONS_PER_HOST:100}

##==================GridFS======================
gridfs.database=${GRID_DBNAME}
gridfs.host=${GRIDFS_DB_ADDR}
gridfs.port=${GRIDFS_DB_PORT}
gridfs.user=${ATP_ITF_LITE_GRIDFS_DB_USER}
gridfs.password=${ATP_ITF_LITE_GRIDFS_DB_PASSWORD}
gridfs.chunk.size=${GRID_CHUNK_SIZE:1024}
gridfs.dictionary.remove.days=${GRID_DICTIONARY_REMOVE_DAYS:30}

##==================Scheduler======================
history.retention.in.days=${HISTORY_RETENTION_IN_DAYS:14}
history.retention.cron.expression=${HISTORY_RETENTION_CRON_EXPRESSION:0 0 2 ? * *}
getaccesstoken.retention.cron.expression=${GET_ACCESS_TOKEN_RETENTION_CRON_EXPRESSION:0 30 2 ? * *}
atp.itf.lite.clean.file.cache.time-sec=${ITF_LITE_CLEAN_CACHED_FILES:3600}
atp.itf.lite.clean.file.cache.cron.expression=${CLEAN_CACHED_FILES_CRON_EXPRESSION:0 0 * * * *}
atp.itf.lite.history.clean.job.expression=${HISTORY_CLEAN_JOB_EXPRESSION:0 10 0 * * ?}
atp.itf.lite.history.clean.job.revision.max.count=${HISTORY_CLEAN_JOB_REVISION_MAX_COUNT:100}
atp.itf.lite.history.clean.job.page-size=${HISTORY_CLEAN_JOB_PAGE_SIZE:100}
atp.itf.lite.clean.cookie.cron.expression=${CLEANUP_COOKIES_CRON_EXPRESSION:0 0 0 * * ?}
atp.itf.lite.collection.runs.remove.days=${COLLECTION_RUNS_REMOVE_DAYS:1}
atp.itf.lite.collection.runs.cron.expression=${CLEANUP_COLLECTION_RUNS_CRON_EXPRESSION:0 0 0 * * ?}

atp.itf.lite.clean.snapshot.cron.expression=${CLEANUP_SNAPSHOTS_CRON_EXPRESSION:0 0 0 * * ?}
atp.itf.lite.clean.snapshot.expiration.period.seconds=${CLEANUP_SNAPSHOTS_EXPIRATION_PERIOD_SECONDS:86400}
##================= KAFKA ==========================
## kafka always enabled, don't need to check kafkaEnabled = true/false
spring.kafka.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.UUIDSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.client-id=${SERVICE_NAME:atp-itf-lite}
kafka.itflite.export.mia.start.topic=${KAFKA_ITF_LITE_EXPORT_MIA_START_TOPIC:itf_lite_to_mia_export_start}
kafka.itflite.export.mia.finish.topic=${KAFKA_ITF_LITE_EXPORT_MIA_FINISH_TOPIC:itf_lite_to_mia_export_finish}
kafka.itflite.export.mia.partitions=${KAFKA_ITF_LITE_EXPORT_MIA_PARTITIONS:3}
kafka.itflite.export.mia.replicas=${KAFKA_ITF_LITE_EXPORT_MIA_REPLICAS:5}
kafka.itflite.export.itf.start.topic=${KAFKA_ITF_LITE_EXPORT_ITF_START_TOPIC:itf_lite_to_itf_export_start}
kafka.itflite.export.itf.finish.topic=${KAFKA_ITF_LITE_EXPORT_ITF_FINISH_TOPIC:itf_lite_to_itf_export_finish}
kafka.itflite.export.itf.partitions=${KAFKA_ITF_LITE_EXPORT_ITF_PARTITIONS:3}
kafka.itflite.export.itf.replicas=${KAFKA_ITF_LITE_EXPORT_ITF_REPLICAS:5}
kafka.itflite.execution.finish.topic=${KAFKA_ITF_LITE_EXECUTION_FINISH_TOPIC:itf_lite_execution_finish}
kafka.itflite.execution.finish.replicas=${KAFKA_ITF_LITE_EXECUTION_FINISH_REPLICAS:5}
kafka.itflite.execution.finish.partitions=${KAFKA_ITF_LITE_EXECUTION_FINISH_PARTITIONS:3}
kafka.itflite.getaccesstoken.finish.topic=${KAFKA_ITF_LITE_GET_ACCESS_TOKEN_FINISH_TOPIC:itf_lite_get_access_token_finish}
kafka.itflite.getaccesstoken.finish.replicas=${KAFKA_ITF_LITE_GET_ACCESS_TOKEN_FINISH_REPLICAS:3}
kafka.itflite.getaccesstoken.finish.partitions=${KAFKA_ITF_LITE_GET_ACCESS_TOKEN_FINISH_PARTITIONS:3}
kafka.service.entities.topic=${KAFKA_SERVICE_ENTITIES_TOPIC:service_entities}
kafka.service.entities.topic.partitions=${KAFKA_SERVICE_ENTITIES_TOPIC_PARTITIONS:1}
kafka.service.entities.topic.replicas=${KAFKA_SERVICE_ENTITIES_TOPIC_REPLICATION_FACTOR:3}
kafka.catalog.notification.group=${KAFKA_CATALOG_GROUP:atp_itf_lite_catalog_notification_group}
kafka.catalog.notification.topic=${KAFKA_CATALOG_TOPIC:catalog_notification_topic}
kafka.environment.notification.topic=${KAFKA_ENVIRONMENT_TOPIC:environments_notification_topic}
kafka.logrecord.scripts.topic.name=${KAFKA_LOGRECORD_SCRIPTS_TOPIC:orch_logrecord_scripts_topic}
kafka.logrecord.scripts.replication.factor=${KAFKA_LOGRECORD_SCRIPTS_TOPIC_REPLICATION_FACTOR:3}
kafka.logrecord.scripts.partitions.number=${KAFKA_LOGRECORD_SCRIPTS_TOPIC_PARTITIONS:3}
##================= ATP Notification ================
atp.notification.mode=${ATP_NOTIFICATION_MODE:kafka}
kafka.notification.topic.name=${KAFKA_NOTIFICATION_TOPIC:notification_topic}
kafka.notification.topic.replicas=${KAFKA_NOTIFICATION_TOPIC_REPLICATION_FACTOR:3}
kafka.notification.topic.min.insync.replicas=${KAFKA_NOTIFICATION_TOPIC_MIN_INSYNC_REPLICATION_FACTOR:3}
kafka.notification.topic.partitions=${KAFKA_NOTIFICATION_TOPIC_PARTITIONS:1}
spring.kafka.producer.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
## feign client for atp-notification service
feign.atp.notification.url=${FEIGN_ATP_NOTIFICATION_URL:}
feign.atp.notification.name=${FEIGN_ATP_NOTIFICATION_NAME:atp-notification}
feign.atp.notification.route=${FEIGN_ATP_NOTIFICATION_ROUTE:api/atp-notification/v1}

##=============Encryption====================
atp.crypto.key=${ATP_CRYPTO_KEY:{ENC}{}{LlLrqLFkty2KsAsBZgFg9IOEfMbDx6nlJ2Jx26zpQEcAZSJCiXRc4yFB4tun8wuCoN9WSZEZwXPcR84DMiaN9Vwanth5hOkIavhbcFmiqjN0fFOAqTEhhsvfJztdwI4DoDoKQW2qVhUgFrmuZsK0x4Q+eNE3Lt6XbpUEaMLonj4xp1/EkigbtLJ79dkLywxocHTyc+Qg4xpy0SRgdMXoD//HaIspU+sOxCXoU0iHktwOfDXRVfFCgU6LRJIVALxmPezXdwnTj8sgOEnD0JOyWs4O8Rs1uRTF6BZkgmIXKAlu/aethceQh0TnSLkDW+o+VLUPz2hajhsIUWexIw6B7A==}}
atp.crypto.privateKey=${ATP_CRYPTO_PRIVATE_KEY:MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCAbdoTtYN/fRV6snGJk/bHkL9MUCddvmjulVrZRO7guOoTVRKDs5AViV07eQusOzithKOIbHtZ5ET0kCLsli5oZdWPifSFhQPfrQrPSJm4clHIPz2Jd9TvcsviWud41D4fqgwVGqLW+LdpZiN3GqIgtce0WzfSA4AwgdUaSNW60WdVBoROptdM5Ht0VKyaRn5cY7pWILqEalDb1EqkZfZG84OpCjedwN096IbxIZbV7SC/3wayPKwxZ3FrxtIfk1Jlc3FeNJBZpCUVABwK4U2AEOMSCUkoqCnfaCSGEhUVGSgXX37j2s28Pw4/sORvaHF+D/ryTa9kBga5yy5x2wHxAgMBAAECggEAfSMMd2HIpENL14bhrAz5SxCV5RTAls3+TmJG6CcLnvluUrH03VDsFqAGsPlLz2DQ4/m2oioZssgCDE4ZSW83/s8i3L6t/B9UW/Cu9LQn3Bm/6B7+peCWIU44rPCoVApyEcZOCY4vlsk3ZUJ5UgcobDjTQsASztZMZHdNHlRTtLf6ybguyigUbulYEhgDEU0iOyaiN6nd51xK1Y6Luhcslxstd/TmVGp5EoHXMUHWy10B2CUx65SIgXiyiMcyAf52OgjA0xKJZNhjvMioNy94aeBpmjKry/S0+49iK5OEBrlt16t6rGV2APMYTBxBYJnRLaLOAULeCK0PU4lq+8KD8QKBgQD7fqKCduEm4dvFkqtgrWpsPrEr9WhhjYrAGrFEnFAl+mjY7MsZqTG+8/FDvSc7RlVth0/3Q5z9zimS40zNDA5qZZuu94BZh8KXBPpZwsLseBfChCuI6sIEdv6SKbrOWTvEultMPRh3QoBECtlw6MSqgyHcvIGJu+c6PzpA1BKJpQKBgQCCutVMXS/U+c9XpSpy0aJOvQKOtJI1QXJ4CjHMqCa4gTRKqP56vMNfhM060/OGtFn8QGJYF2Qajq2L+YjKKOvNo3Ta3lmPzRdbWDXQdUC1lzfJBi6UXoenvfQ9FyCl2Gw7qIH+Wd3l1Ios4c9TwWoPqi+Q0F8P6wBZx7Ufe6ktXQKBgQDNpRYTYkvnNGY13yG9su/DxVuwW0JYCpo7TVhIhxzOgT08rBvDRuODhgtxXXl38aInJq8PvDziGLNMBgsl28bp3133KzDLhMRsIsjnnucu32BmURccJQIzDm5JbE/xLWw/CDdhVs/rrPgfK1P0DJHL7+A/k/DEhF6l9U+X9RGXdQKBgQCAaPDXP7maI39NAgm+GripSvNWJXxwH0dHLgxYkNrn5NHufCzrdrsZ+iJ1JHhS2piBNOTkzqUfiQJjOcrpeGSW63X+/uVOYRAOQ4kop+PV+yFqrk3Wozvwwp9D2pHRFdLKjuyRYMib1rea+ntiM9vwYySxxFt8EUOY7Je2wwscaQKBgGGjyI60zDIpxwJJDKLFN8mk9H3Wjky6boOx6VOW74+1qE2RXh09sbp9P7CR9CGV7ZsymxLW/slmtF6hIp9h2W+PXuJd9bT/bgUXSGJPPJHfVOcr4pF7acFxZeVlHi5PVcss8i3jb/YUwZBfanxFcf/Ylbp3j/JvmvdnoeighFrq}

##============= Monitoring ==================
management.server.port=${MONITOR_PORT:8090}
management.endpoints.web.exposure.include=${MONITOR_WEB_EXPOSE:prometheus,info,scheduledtasks}
management.endpoints.web.base-path=${MONITOR_WEB_BASE:/}
management.endpoints.web.path-mapping.prometheus=${MONITOR_WEB_MAP_PROM:metrics}
management.metrics.tags.application=${spring.application.name}

##==================HAZELCAST====================
spring.cache.hazelcast.cluster-name=${HAZELCAST_CLUSTER_NAME:atp-hc}
spring.cache.hazelcast.client.enable=${HAZELCAST_CLIENT_ENABLED:false}
spring.cache.hazelcast.server.enable=${HAZELCAST_SERVER_ENABLED:false}
spring.cache.hazelcast.server.port=${HAZELCAST_SERVER_PORT:5701}
spring.cache.hazelcast.server.address=${HAZELCAST_SERVER_ADDRESS:127.0.0.1}

##===================EI GridFS==================
ei.gridfs.database=${EI_GRID_DBNAME:dbname}
ei.gridfs.host=${EI_GRIDFS_DB_ADDR:gridfs.mongocluster.svc}
ei.gridfs.port=${EI_GRIDFS_DB_PORT:27017}
ei.gridfs.user=${EI_ATP_ITF_LITE_GRIDFS_DB_USER:user}
ei.gridfs.password=${EI_ATP_ITF_LITE_GRIDFS_DB_PASSWORD:pass}

## ================== Consul ========================
management.health.consul.enabled=${CONSUL_HEALTH_CHECK_ENABLED:false}

##=============Audit Logging=================
atp.audit.logging.enable=${AUDIT_LOGGING_ENABLE:false}
atp.audit.logging.topic.name=${AUDIT_LOGGING_TOPIC_NAME:audit_logging_topic}
atp.reporting.kafka.producer.bootstrap-server=${KAFKA_REPORTING_SERVERS:kafka:9092}
atp.audit.logging.topic.partitions=${AUDIT_LOGGING_TOPIC_PARTITIONS:1}
atp.audit.logging.topic.replicas=${AUDIT_LOGGING_TOPIC_REPLICAS:3}

## ================ ITF Lite settings =================
template.resolver.recursion.depth.max=3

## ================ Javers =================
javers.springDataAuditableRepositoryAspectEnabled=${JAVERS_ENABLED:true}
## Need to remove cache disabling after increase of java version to 17 and increase of javers version to latest
javers.sqlGlobalIdCacheDisabled=true

##=================== Swagger =======================
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}

## ============ Collection Execution ================
request.execution.count.max=50

##=============Nashorn security========================
nashorn.args="-strict --no-java --no-syntax-extensions"
